

import java.awt.Dimension;
import java.awt.List;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;



/* Variables :
*  DefaultListModel <Car> modelListCar  
*   JDialog dlgEdit;
    private javax.swing.JFileChooser jFileChooserSave;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbNameDlg;
    private javax.swing.JLabel lbSecs;
    private javax.swing.JLabel lbSecsDlg;
    private javax.swing.JLabel lbYear;
    private javax.swing.JLabel lbYearDlg;
    private javax.swing.JList<Car> listCar;
*/
public class CarPractice extends javax.swing.JFrame {
    
    DefaultListModel<Car> modelListCar = new DefaultListModel<>();
   

    public CarPractice() {
        initComponents();
        
        nameErr.setVisible(false);
        yearErr.setVisible(false);
        secsErr.setVisible(false);
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        centerOnParent(dlgEditCar,true);
        
    }

    ////////////FOR ALL VARIBLES/////////////////////////////////
    File currentFile = new File("C:\\untitled.txt");
    boolean isModified = false;
    //String year = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserSave = new javax.swing.JFileChooser();
        dlgEditCar = new javax.swing.JDialog();
        lbNameDlg = new javax.swing.JLabel();
        tfNameDlg = new javax.swing.JTextField();
        dlgNameErr = new javax.swing.JLabel();
        tfYearDlg = new javax.swing.JTextField();
        dlgYearErr = new javax.swing.JLabel();
        lbYearDlg = new javax.swing.JLabel();
        lbSecsDlg = new javax.swing.JLabel();
        tfSecsDlg = new javax.swing.JTextField();
        dlgSecsErr = new javax.swing.JLabel();
        btEdit = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        popupMenu = new javax.swing.JPopupMenu();
        ppmiDelete = new javax.swing.JMenuItem();
        lbName = new javax.swing.JLabel();
        lbYear = new javax.swing.JLabel();
        lbSecs = new javax.swing.JLabel();
        tfYear = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        tfSecs = new javax.swing.JTextField();
        nameErr = new javax.swing.JLabel();
        yearErr = new javax.swing.JLabel();
        secsErr = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCar = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miOpen = new javax.swing.JMenuItem();
        miSaveAs = new javax.swing.JMenuItem();
        miSaveSelect = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        dlgEditCar.setTitle("Edit Car");
        dlgEditCar.setModal(true);

        lbNameDlg.setText("Model Name");

        tfNameDlg.setText("Honda");
        tfNameDlg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameDlgActionPerformed(evt);
            }
        });

        dlgNameErr.setForeground(new java.awt.Color(255, 0, 0));
        dlgNameErr.setText("Input Name illegal");

        tfYearDlg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfYearDlgActionPerformed(evt);
            }
        });

        dlgYearErr.setForeground(new java.awt.Color(255, 0, 0));
        dlgYearErr.setText("Input Year illegal");

        lbYearDlg.setText("Year of Production");

        lbSecsDlg.setText("Secs To 100");

        tfSecsDlg.setText("45");

        dlgSecsErr.setForeground(new java.awt.Color(255, 0, 0));
        dlgSecsErr.setText("Input Secs illegal");

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgEditCarLayout = new javax.swing.GroupLayout(dlgEditCar.getContentPane());
        dlgEditCar.getContentPane().setLayout(dlgEditCarLayout);
        dlgEditCarLayout.setHorizontalGroup(
            dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgEditCarLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbYearDlg)
                    .addComponent(lbSecsDlg, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfYearDlg, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNameDlg, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSecsDlg, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dlgEditCarLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgSecsErr)
                            .addComponent(dlgNameErr)
                            .addComponent(dlgYearErr))))
                .addGap(135, 135, 135))
            .addGroup(dlgEditCarLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dlgEditCarLayout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(lbNameDlg, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(275, Short.MAX_VALUE)))
        );
        dlgEditCarLayout.setVerticalGroup(
            dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditCarLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(tfNameDlg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(dlgNameErr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbYearDlg)
                    .addComponent(tfYearDlg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(dlgYearErr)
                .addGap(18, 18, 18)
                .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSecsDlg)
                    .addComponent(tfSecsDlg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dlgSecsErr)
                .addGap(18, 18, 18)
                .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEdit)
                    .addComponent(btCancel))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(dlgEditCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dlgEditCarLayout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(lbNameDlg)
                    .addContainerGap(213, Short.MAX_VALUE)))
        );

        ppmiDelete.setText("Delete");
        ppmiDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmiDeleteActionPerformed(evt);
            }
        });
        popupMenu.add(ppmiDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbName.setText("Model Name");

        lbYear.setText("Year of Production");

        lbSecs.setText("Secs To 100");

        tfYear.setText("2001");
        tfYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfYearActionPerformed(evt);
            }
        });

        tfName.setText("Honda");
        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        tfSecs.setText("45");

        nameErr.setForeground(new java.awt.Color(255, 0, 0));
        nameErr.setText("Input Name illegal");

        yearErr.setForeground(new java.awt.Color(255, 0, 0));
        yearErr.setText("Input Year illegal");

        secsErr.setForeground(new java.awt.Color(255, 0, 0));
        secsErr.setText("Input Secs illegal");

        btAdd.setText("Add A Car");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        listCar.setModel(modelListCar);
        listCar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listCarMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(listCar);

        jMenu1.setText("File");

        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        jMenu1.add(miOpen);

        miSaveAs.setText("Save As...");
        miSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(miSaveAs);

        miSaveSelect.setText("Save SelectedAs");
        miSaveSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                miSaveSelectMousePressed(evt);
            }
        });
        miSaveSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveSelectActionPerformed(evt);
            }
        });
        jMenu1.add(miSaveSelect);
        jMenu1.add(jSeparator1);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbName)
                    .addComponent(lbSecs)
                    .addComponent(lbYear))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfName)
                        .addComponent(tfYear)
                        .addComponent(tfSecs, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdd)
                    .addComponent(nameErr)
                    .addComponent(yearErr)
                    .addComponent(secsErr))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameErr)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbYear))
                        .addGap(4, 4, 4)
                        .addComponent(yearErr)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSecs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSecs))
                        .addGap(2, 2, 2)
                        .addComponent(secsErr)
                        .addGap(18, 18, 18)
                        .addComponent(btAdd))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
       

    }//GEN-LAST:event_miOpenActionPerformed

    private void miSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveAsActionPerformed
        // TODO add your handling code here:
        //JList list = (JList)evt.getSource();
        //saveAs(car);
        jFileChooserSave.setFileFilter(new FileNameExtensionFilter("*.txt", "txt"));

        if (jFileChooserSave.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            currentFile = jFileChooserSave.getSelectedFile();
            String filePath = currentFile.getAbsolutePath();
            if (!filePath.endsWith(".txt")) {
                currentFile = new File(filePath + ".txt");
            }
            try (PrintWriter pw = new PrintWriter(currentFile)) {
                //pw.write(listModelCar.getElementAt(1));
                int count = modelListCar.getSize();
                for (int i = 0; i < count; i++) {
                    //Car car = listModelCar.elementAt(i);
                    //Car car = 
                    //strSelect = car.getName() + ";" + car.getYear() + ";" + car.getSecs() + System.getProperty("line.separator");
                    //pw.write(strSelect);
                    //pw.write(car.toStringSave());
                }
                int i = modelListCar.getSize();
                System.out.println("Finished write file" + currentFile.getName());

            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                    "Unable to write file contents to " + currentFile.getAbsolutePath(),
                    "File access error",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

        }
    }//GEN-LAST:event_miSaveAsActionPerformed

    private void miSaveSelectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miSaveSelectMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_miSaveSelectMousePressed

    private void miSaveSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveSelectActionPerformed
        // TODO add your handling code here:
        /*
        jFileChooserSave.setFileFilter(new FileNameExtensionFilter("*.txt", "txt"));

        if (jFileChooserSave.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            currentFile = jFileChooserSave.getSelectedFile();
            String filePath = currentFile.getAbsolutePath();
            if (!filePath.endsWith(".txt")) {
                currentFile = new File(filePath + ".txt");
            }
            try (PrintWriter pw = new PrintWriter(currentFile)) {
                pw.write(strSelect);
                System.out.println("Select item is " + strSelect);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                    "Unable to write file contents to " + currentFile.getAbsolutePath(),
                    "File access error",
                    JOptionPane.WARNING_MESSAGE);
            }
        }
        */
        jFileChooserSave.setFileFilter(new FileNameExtensionFilter("*.txt", "txt"));

        if (jFileChooserSave.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            currentFile = jFileChooserSave.getSelectedFile();
            String filePath = currentFile.getAbsolutePath();
            if (!filePath.endsWith(".txt")) {
                currentFile = new File(filePath + ".txt");
            }
            try (PrintWriter pw = new PrintWriter(currentFile)) {
                //pw.write(listModelCar.getElementAt(1));
                int count = modelListCar.getSize();
                for (int i = 0; i < count; i++) {
                    Car car = modelListCar.elementAt(i);
                    //Car car1 = listModelCar.e
                    //strSelect = car.getName() + ";" + car.getYear() + ";" + car.getSecs() + System.getProperty("line.separator");
                    //pw.write(strSelect);
                    pw.write(car.toStringSave());
                }
                int i = modelListCar.getSize();
                System.out.println("Finished write file" + currentFile.getName());

            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                    "Unable to write file contents to " + currentFile.getAbsolutePath(),
                    "File access error",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

        }
    }//GEN-LAST:event_miSaveSelectActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_miExitActionPerformed

    private void tfYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfYearActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        Car car = new Car();
        String name = tfName.getText();
        String str_year = tfYear.getText();
        String str_secs = tfSecs.getText();
        String outputString = "";
        outputString = name + ";" + str_year + ";" + str_secs;
        //        
        if (isCarDataValid(name, nameErr, str_year, yearErr, str_secs, secsErr)) {
            modelListCar.addElement(new Car(name, Integer.parseInt(str_year), Double.parseDouble(str_secs)));
        }
       /*
        car.setYear(Integer.parseInt(str_year));
        car.setName(name);
        car.setSecs(Double.parseDouble(str_seDatecs));
        modelListCar.addElement(car);
        System.out.println("Add car is "+car.getName()+" "+car.getYear()+" "+car.getSecs());
        */
        //////////////////////////////////////////////////////////
        //listPeople.addMouseListener(new PopClickListener());
    }//GEN-LAST:event_btAddActionPerformed

    private void tfNameDlgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameDlgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameDlgActionPerformed

    private void tfYearDlgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfYearDlgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfYearDlgActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
        System.out.println("Edit Start......");
        
        int[] indexList = listCar.getSelectedIndices();
        
        String name = tfNameDlg.getText();
        String yearStr = tfYearDlg.getText();
        String secsStr = tfSecsDlg.getText();
        if (isCarDataValid(name, dlgNameErr, yearStr, dlgYearErr,
                secsStr, dlgSecsErr)) {
            Car c = modelListCar.get(listCar.getSelectedIndex());
            // save changes
            c.name = name;
            c.year = Integer.parseInt(yearStr);
            c.secs = Double.parseDouble(secsStr);
            //
            dlgEditCar.setVisible(false);
        }
        
    }//GEN-LAST:event_btEditActionPerformed

    private void listCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCarMouseClicked
        // TODO add your handling code here:
        //Double Edit
        if ((evt.getButton() == MouseEvent.BUTTON1) && (evt.getClickCount() == 2)) {
            // left button, double-click
            listCar.setSelectedIndex(listCar.locationToIndex(evt.getPoint()));
            int index = listCar.getSelectedIndex();
            if (index != -1) {
                Car c = modelListCar.get(index);
                // fill in data of Car double-clicked for editing
                tfNameDlg.setText(c.name);
                tfYearDlg.setText(c.year + "");
                tfSecsDlg.setText(c.secs +"");
                // hide errors
                dlgNameErr.setVisible(false);
                dlgYearErr.setVisible(false);
                dlgSecsErr.setVisible(false);
                // show dialog
                dlgEditCar.setVisible(true);
            }
        }
    }//GEN-LAST:event_listCarMouseClicked

    private void listCarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCarMousePressed
        // TODO add your handling code here:
        //delete
        if ((evt.getButton() == MouseEvent.BUTTON3) && (evt.getClickCount() == 1)) {
            listCar.setSelectedIndex(listCar.locationToIndex(evt.getPoint()));
            if (listCar.getSelectedIndex() != -1) {
                popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_listCarMousePressed

    private void ppmiDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmiDeleteActionPerformed
        // TODO add your handling code here:
        int index = listCar.getSelectedIndex();
        Car p = modelListCar.get(index);
        //Custom button text
        Object[] options = {"Delete", "Cancel"};
        int choice = JOptionPane.showOptionDialog(this,
                "Are you sure you want to delete item: \n" + p,
                "Confirm deletion",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);
        if (choice == 0) {
            modelListCar.remove(index);
        }
    }//GEN-LAST:event_ppmiDeleteActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        // TODO add your handling code here:
        dlgEditCar.setVisible(false);
        dlgEditCar.dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    ////////////////////////////Customer Class//////////////////////////////////
    
    /*No1 Check the Car Data */
    private boolean isCarDataValid(String name, JLabel nameErr,
        String year_str, JLabel yearErr, String secs, JLabel secsErr) {
        
        boolean isNameInvalid = (name.length() < 2 || name.length() > 20);
        nameErr.setVisible(isNameInvalid);
        //
        int intYear = 0;
        boolean isYearInvalid;
        try {
            intYear = Integer.parseInt(year_str);
            isYearInvalid = (intYear < 1800 || intYear > 2020);
        } catch (NumberFormatException e) {
            isYearInvalid = true;
        }
        yearErr.setVisible(isYearInvalid);
        //
        boolean isSecInvalid;
        Double doubleSec = 0.00;
        try {
            doubleSec = Double.parseDouble(secs);
            isSecInvalid = doubleSec <0 || doubleSec > 10000;
        }catch(NumberFormatException e) {
            isSecInvalid = true;
        }
        
        secsErr.setVisible(isSecInvalid);
        //
        return (!(isNameInvalid || isYearInvalid || isSecInvalid));
    }
    
    //centerOnParent
    // Center on parent ( absolute true/false (exact center or 25% upper left) )
    final public void centerOnParent(final Window child, final boolean absolute) {
        child.pack();
        boolean useChildsOwner = child.getOwner() != null ? ((child.getOwner() instanceof JFrame) || (child.getOwner() instanceof JDialog)) : false;
        final Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        final Dimension parentSize = useChildsOwner ? child.getOwner().getSize() : screenSize;
        final Point parentLocationOnScreen = useChildsOwner ? child.getOwner().getLocationOnScreen() : new Point(0, 0);
        final Dimension childSize = child.getSize();
        childSize.width = Math.min(childSize.width, screenSize.width);
        childSize.height = Math.min(childSize.height, screenSize.height);
        child.setSize(childSize);
        int x;
        int y;
        if ((child.getOwner() != null) && child.getOwner().isShowing()) {
            x = (parentSize.width - childSize.width) / 2;
            y = (parentSize.height - childSize.height) / 2;
            x += parentLocationOnScreen.x;
            y += parentLocationOnScreen.y;
        } else {
            x = (screenSize.width - childSize.width) / 2;
            y = (screenSize.height - childSize.height) / 2;
        }
        if (!absolute) {
            x /= 2;
            y /= 2;
        }
        child.setLocation(x, y);
    }

    /////////////////////////////////////////////////////////////
    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        // TODO add your handling code here:
      if (isModified) {
            Object[] options = {"Yes", "No"};
            int choice = JOptionPane.showOptionDialog(this,
                    "Please save the current file before exit?",
                    "Unsaved changes to current file",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]);
            switch (choice) {
                case JOptionPane.YES_OPTION:
                    //saveAs(c);
                    break;
                case JOptionPane.NO_OPTION:
                default:
            }
        }
        dispose();  
    }    
    /////////////////////////////////////////////////////////////
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarPractice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarPractice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarPractice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarPractice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarPractice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btEdit;
    private javax.swing.JDialog dlgEditCar;
    private javax.swing.JLabel dlgNameErr;
    private javax.swing.JLabel dlgSecsErr;
    private javax.swing.JLabel dlgYearErr;
    private javax.swing.JFileChooser jFileChooserSave;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbNameDlg;
    private javax.swing.JLabel lbSecs;
    private javax.swing.JLabel lbSecsDlg;
    private javax.swing.JLabel lbYear;
    private javax.swing.JLabel lbYearDlg;
    private javax.swing.JList<Car> listCar;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miSaveAs;
    private javax.swing.JMenuItem miSaveSelect;
    private javax.swing.JLabel nameErr;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem ppmiDelete;
    private javax.swing.JLabel secsErr;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfNameDlg;
    private javax.swing.JTextField tfSecs;
    private javax.swing.JTextField tfSecsDlg;
    private javax.swing.JTextField tfYear;
    private javax.swing.JTextField tfYearDlg;
    private javax.swing.JLabel yearErr;
    // End of variables declaration//GEN-END:variables
}
